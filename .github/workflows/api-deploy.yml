name: API Test, Build & Deploy

on:
  push:
    branches:
      - API

permissions:
  contents: write

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_USERNAME: ${{ secrets.TELEGRAM_USERNAME }}

jobs:
  test-and-deploy-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout API repository
        uses: actions/checkout@v3
        with:
          path: api  # –°–∫–∞—á–∏–≤–∞–µ–º –∫–æ–¥ API –≤ –ø–∞–ø–∫—É api

      - name: Checkout Bot repository (for tests)
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          ref: tg_bot  # –ë–µ—Ä–µ–º –∫–æ–¥ –±–æ—Ç–∞ –∏–∑ –¥—Ä—É–≥–æ–π –≤–µ—Ç–∫–∏
          path: bot  # –°–∫–∞—á–∏–≤–∞–µ–º –∫–æ–¥ –±–æ—Ç–∞ –≤ –ø–∞–ø–∫—É bot

      # üîç –û—Ç–ª–∞–¥–∫–∞ - –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
      - name: Debug - List repo contents
        run: ls -R

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # üîπ –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π `docker-compose.yml`
      - name: Create test docker-compose.yml
        run: |
          cat <<EOF > docker-compose.yml
          version: '3.8'
          services:
            api:
              build: ./api
              container_name: electro_api
              restart: always
              ports:
                - "8375:8375"
              environment:
                - FLASK_ENV=production

            bot:
              build: ./bot
              container_name: electro_bot
              restart: always
              ports:
                - "8374:8374"
              environment:
                - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
                - TELEGRAM_USERNAME=${TELEGRAM_USERNAME}
          EOF

      - name: Build API Image
        run: |
          docker build -t electro_api:test -f api/Dockerfile ./api

      - name: Build Bot Image (for testing)
        run: |
          docker build --build-arg TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} --build-arg TELEGRAM_USERNAME=${{ secrets.TELEGRAM_USERNAME }} -t electro_bot:test -f bot/Dockerfile ./bot

      - name: Run Services for Testing
        run: docker-compose up -d

      - name: Wait for services to start
        run: sleep 10

      - name: Send Test Request to API
        run: |
          curl -X POST http://localhost:8375/new_request \
          -H "Content-Type: application/json" \
          -d '{"name": "Test User", "phoneNumber": "1234567890", "TypeOFService": "Test Service"}'

      - name: Check Telegram Message
        run: |
          sleep 5
          RESPONSE=$(curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/getUpdates")
          echo "Telegram Response: $RESPONSE"
          echo "$RESPONSE" | grep "Test User" || (echo "Test failed!" && exit 1)

      - name: Stop and Remove Containers
        run: docker-compose down

      - name: Push API Image
        if: success()
        run: |
          docker tag electro_api:test $DOCKER_USERNAME/electro_api:latest
          docker push $DOCKER_USERNAME/electro_api:latest

      - name: Create GitHub Release for API
        uses: softprops/action-gh-release@v1
        with:
          tag_name: api-v1.0.${{ github.run_number }}
          name: API Release v1.0.${{ github.run_number }}
          body: "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–µ–ª–∏–∑ –¥–ª—è API."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
